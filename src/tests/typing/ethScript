build

etac ("Test --typecheck") "-libpath $(testpath) --typecheck" {
    arrayassign1.eta;
    arrayassign2.eta;
    arrayassign3.eta;
    arrayassign4.eta;
    arrayinits.eta;
    badarray1.eta;
    badarray2.eta;
    badarray3.eta;
    badeti.eti (Semantic, "Mismatch in type of function f among interfaces/programs");
    badetiparse.eti (Syntax, "use");
    badetiparseuse.eta (Syntax, "use");
    badetiuse.eta (Semantic, "Mismatch in type of function f among interfaces/programs");
    badprocedurecalls.eta (Semantic, "Procedures may not return any values");
    booleanprecedence.eta;
    eti1.eti;
    eti2.eti;
    eti3.eti;
    exampleprogram.eta;
    fun1.eta (Semantic, "Invalid function shadowing");
    implementalleti.eta;
    length.eta;
    multipletypesinarray.eta (Semantic, "Array elements must be consistent type");
    multipletypesinarray2.eta (Semantic, "Array elements must be consistent type");
    mutuallyrecursive.eta;
    noimplementalleti.eta;
    procedurecalls.eta;
    recursivefunctions.eta;
    samefunction.eti;
    shadow1.eta (Semantic, "Cannot assign to non-assignable of type function");
    shadow2.eta (Semantic, "Invalid function shadowing");
    variableassign.eta (Semantic, "Cannot assign type bool to variable of type int");
    wrongtypeinarrayassign.eta (Semantic, "Assigned expression type does not match expected type ast.Primitive$INT@527e5409");
}