#!/bin/sh

this=$(readlink -e "$0")
prg=$(basename "$this")
dir="dependencies/custom"

usage() {
  compiler "-help"
  cat <<EOF
  -j <jvm-options>         pass options to the Java VM
  -J <jvm>                 use a different Java VM (default java in path)
  -V                       echo the java command
  -rdebug                  enable remote debugging
EOF
}

compiler() {
  eval "$java" "$vmargs" -classpath "'$classpath'" java_cup.Main "$@"
}
compilerprint() {
  echo "$java" "$vmargs" -classpath "'$classpath'" java_cup.Main "$@"
}

fixclasspath() {
  windows=0

  if [ `uname | grep -c CYGWIN` -ne 0 ]; then
    windows=1
  fi

  cp="$1"

  if [ "$windows" = 1 ]; then 
    cygpath -pw "$cp"
  else
    echo "$cp"
  fi
}

unixfilename() {
  windows=0

  if [ `uname | grep -c CYGWIN` -ne 0 ]; then
    windows=1
  fi

  cp="$1"

  if [ "$windows" = 1 ]; then 
    cygpath -u "$cp"
  else
    echo "$cp"
  fi
}


extra_cp=
args=
vmargs=
classpath=
java=java

dir=`unixfilename "$dir"`

while true; do
    case "$1" in
        "")
            break
            ;;
        -V)
            verbose=1
            shift
            ;;
        -classpath|-cp)
            shift
            extra_cp="$extra_cp:$1"
            shift
            ;;
        -ext)
            shift
            ext="$1"
            shift
            ;;
        -j)
            shift
            vmargs="$vmargs '$1'"
            shift
            ;;
        -J)
            shift
            java="'$1'"
            shift
            ;;
	-rdebug)
	    shift
	    vmargs="${vmargs} -Xdebug -Xrunjdwp:transport=dt_socket,address=6666,server=y,suspend=y"
	    ;;
	    
        -h)
            usage=1
            break
            ;;
        *)
            args="$args '$1'"
            shift
            ;;
    esac
done

if [ -n "$ext" ]; then
  args="-ext '$ext' $args"
fi


classpath="$dir/classes:$dir/java_cup.jar"
classpath="$classpath:$extra_cp"
classpath=`fixclasspath "$classpath"`


if [ "$usage" = 1 ]; then
  usage
  exit 0
fi


if [ "$verbose" = 1 ]; then
    compilerprint "$args"
fi

compiler "$args"

