//Adapted from TA Shiyuan

//PRODUCTION

buildscript {
    ext.kotlin_version = '1.7.21'
    repositories {
        flatDir { dirs 'dependencies/plugins' }

        //INCLUDE FOR DOWNLOAD
//        mavenCentral()
    }

    dependencies {
        classpath fileTree(dir: 'dependencies/plugins', include: '*.jar')
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    //INCLUDE FOR DOWNLOAD
//    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
//    id 'java'
//    id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
    //INCLUDE FOR DOWNLOAD
//        mavenCentral()

    flatDir(dir: 'dependencies/plugins')
    flatDir(dir: 'dependencies/test')
    flatDir(dir: 'dependencies/main')
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.jetbrains.kotlin.jvm'

test {
    useJUnitPlatform()
}

dependencies {
    //EXCLUDE FOR DOWNLOAD
    implementation fileTree(dir: 'dependencies/main', include: '*.jar')
    implementation fileTree(dir: 'dependencies/test', include: '*.jar')
    kotlinCompilerClasspath fileTree(dir: 'dependencies/plugins', include: '*.jar')
    kotlinCompilerClasspath fileTree(dir: 'dependencies/main', include: '*.jar')

    //INCLUDE FOR DOWNLOAD
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-script-util:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
//    implementation "com.github.ajalt.clikt:clikt:3.5.1"
}

group 'com.jaek'
version '1.0'

sourceCompatibility = 1.8

task jflex(type: Exec) {
    commandLine "jflex", "-q", "-d src/main/java", "src/main/jflex/Lexer.flex"
}

build {
    mustRunAfter 'jflex'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    dependsOn "build"
    archiveBaseName.set('jaek')
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
}

task copyRuntimeDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "dependencies/runtime"
    from configurations.runtimeClasspath
}

task copyMainDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "dependencies/main"
    from configurations.runtimeClasspath
}

task copyTestDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "dependencies/test"
    from configurations.testRuntimeClasspath - configurations.runtimeClasspath
}

task copyCompileOnlyDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "dependencies/compile-only"
    from configurations.compileClasspath - configurations.runtimeClasspath
}

task copyPluginJarsToLib(type: Copy) {
    includeEmptyDirs = true
    into "dependencies/plugins"
    from buildscript.configurations.classpath
}

task copyDependenciesToLib {
    project.ext.state = "DOWNLOAD"
    dependsOn 'copyMainDependenciesToLib'
    dependsOn 'copyTestDependenciesToLib'
    dependsOn 'copyCompileOnlyDependenciesToLib'
    dependsOn 'copyPluginJarsToLib'
}